{
    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/702263520",
    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/327#issuecomment-702263520",
    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/327",
    "id": 702263520,
    "node_id": "MDEyOklzc3VlQ29tbWVudDcwMjI2MzUyMA==",
    "user": {
      "login": "padenmoss",
      "id": 58626800,
      "node_id": "MDQ6VXNlcjU4NjI2ODAw",
      "avatar_url": "https://avatars0.githubusercontent.com/u/58626800?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/padenmoss",
      "html_url": "https://github.com/padenmoss",
      "followers_url": "https://api.github.com/users/padenmoss/followers",
      "following_url": "https://api.github.com/users/padenmoss/following{/other_user}",
      "gists_url": "https://api.github.com/users/padenmoss/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/padenmoss/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/padenmoss/subscriptions",
      "organizations_url": "https://api.github.com/users/padenmoss/orgs",
      "repos_url": "https://api.github.com/users/padenmoss/repos",
      "events_url": "https://api.github.com/users/padenmoss/events{/privacy}",
      "received_events_url": "https://api.github.com/users/padenmoss/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-10-01T16:48:33Z",
    "updated_at": "2020-10-01T16:49:14Z",
    "author_association": "NONE",
    "body": "I do not understand what formal definition you are looking for. Are the proposals and implementations referenced unclear in some way for you? \r\n\r\nHere is a formal definition from the linked PirlGuard website: \r\n>\"Once the attacker opens their node for peering it will attempt to peer with rest of the nodes on the network, telling them that they are wrong. However, once this happens PirlGuard will drop the peer and penalize them by sentencing them to mine X amount of penalty blocks due to their un-peered mining.\"\r\n\r\nTo answer your questions:\r\n\r\n- This \"modification\" requires a hard fork that must apply to a majority of nodes and the protocol will affect the chain whenever a block that requires a chain reorganization of pre-determined length ('X') is introduced by one node to any other node from here-on out.\r\n\r\n- The chain is \"updated\" by penalizing blocks introduced that require deep chain reorganization greater than 'X', which prevents 51% attacks as an improvement.\r\n- The \"update process\" modifies consensus between nodes whenever a block requires chain reorganization deeper than 'X'.\r\n\r\nThis is all thoroughly documented in the links provided herein. Solving this issue with a hard fork is permanent and not subject to conflicting chain splits between various client updates as was experienced at the beginning of August 2020.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/702263520/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }