{
    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/674768419",
    "html_url": "https://github.com/ethereumclassic/ECIPs/issues/327#issuecomment-674768419",
    "issue_url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/327",
    "id": 674768419,
    "node_id": "MDEyOklzc3VlQ29tbWVudDY3NDc2ODQxOQ==",
    "user": {
      "login": "Dexaran",
      "id": 26142412,
      "node_id": "MDQ6VXNlcjI2MTQyNDEy",
      "avatar_url": "https://avatars1.githubusercontent.com/u/26142412?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Dexaran",
      "html_url": "https://github.com/Dexaran",
      "followers_url": "https://api.github.com/users/Dexaran/followers",
      "following_url": "https://api.github.com/users/Dexaran/following{/other_user}",
      "gists_url": "https://api.github.com/users/Dexaran/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Dexaran/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Dexaran/subscriptions",
      "organizations_url": "https://api.github.com/users/Dexaran/orgs",
      "repos_url": "https://api.github.com/users/Dexaran/repos",
      "events_url": "https://api.github.com/users/Dexaran/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Dexaran/received_events",
      "type": "User",
      "site_admin": false
    },
    "created_at": "2020-08-17T09:25:13Z",
    "updated_at": "2020-08-17T09:25:13Z",
    "author_association": "MEMBER",
    "body": "@phyro this is a good example of an [edge case attack](https://gist.github.com/Dexaran/b7c23ec264019665cffd35d35bc26ee9#edge-caseattack).\r\n\r\n>I could be misunderstanding the implementation so I apologize if that's the case. In case I'm wrong I'd appreciate if you explained to me why this would not be possible.\r\n\r\n### TL;DR\r\n\r\n**This is possible in theory but this should be a 99,9% attack and there is no way to benefit from this attack for the attacker so there are no incentives to perform such an attack for any party.**\r\n\r\n(Unless the goal of this attack is to destroy the network. However this goal could be accomplished by 51%-attacks in the current state of the network and this would be much cheaper)\r\n\r\n\r\n> The PenaltyCheckLength variable is set to 60 for all clients.\r\n\r\nThis is still a field for tuning and adjustment. Here we assume that there should be a good balance between the possibility to resync the naturall split and restricting attackers ability to develop a longest chain thus causing the reorganization.\r\n\r\nThere are good reasons to set `PenaltyCheckLength` to the smalles possible value (for example 12 as it was suggested as \"transaction finality threshold\" by Ethereum Foundation in the early days of ETH if I remember correct). I'm ready to gather and provide the statistical data from Callisto and Pirl if necessary.\r\n\r\n\r\n> The attacker now also adds 1 more more block to the victim chain (could also add 10 or whatever).\r\n\r\nThe attacker can not add more than `PenaltyCheckLength` blocks however so this is another reason to set it to the lowest possible value.\r\n\r\n> When the mainnet mines 2 blocks, the mainnet chain will have more PoW and the victim client will want to reorg, but since it will try to reorg 62 blocks, it will get a huge penalty due to the int64(tipOfTheMainChain - incomingBlock)\r\n\r\nThe less the value of `PenaltyCheckLength` the fewer penalty blocks would be assigned. This is the third reason to set it to the lowest possible value.\r\n\r\n> which means the victim chain will stay split for a long time.\r\n\r\nFinally the chain will resync again. It should be noted that the attacker must maintain the chain offspring for long time which is costly (without any possibility to make any profit from this unlike 51%-attack case). Once the attacker runs out of funds the chain will die eventually (or become the main chain depending on whether hashpower sources adopted the attackers branch of the chain or not).\r\n\r\n**It must be noted that block explorers and most exchanges run background nodes instead of relying on a single node confirming deposits. Once there is a disparity between the background node and the node which has confirmed the deposit the exchange must immediately halt deposits until the investigation of the issue is conducted.** Unlike the 'stealth mining attack' that can go for an unlimited period of time while the rest of the chain participants are completely unaware of the attack - this edge case will be spotted immediately.\r\n\r\nIt is not possible to harm any exchange (or DAPP) with this attack as every entity which has multiple geographically spread nodes will have nodes synced with both chains (the attackers branch and the \"previous mainnet branch\"). In the worst case the exchange can whitelist the correct branch for those nodes who got to the wrong chain due to network latency at the moment of the split.\r\n\r\n> If this is possible, then I could time these blocks in a way that roughly 1/3 or 1/2 of the network would receive them and become victims of a split\r\n\r\n**Block mining is very random and will greatly vary in time. You can't just generate a block at a given point in time unless you have 99,99% hashrate advantage.**\r\n\r\nAt a prolonged time frame like 10 hours a minimal difference of hashrate will play its role which makes 51%attacks possible (as even the slightest advantage in hash power may cause the attacker to develop a slightly larger chain if he will maintain this advantage for long enough). In case you want a certain block to be generated at exactly the moment 1/2 or 1/3 of the network has already adopted another block then 51% advantage is not sufficient. If you want then to generate a couple of blocks in a row within a very limited time frame (be it 60 or 12 blocks) then you want much more hash power than 51%.\r\n\r\n\r\n> I could even make K splits if I made K different reorg chains and send them to different nodes.\r\n\r\nFor each of `k`th chains you need to pay for another 51% (at the very least and in practice for even more) hashpower.\r\n\r\nSo, if you have an amount of funds that is orders of magnitude higher than the capitalization of the attacked network in order to invest in an attack that will not bring you any profit, then you can do it.",
    "reactions": {
      "url": "https://api.github.com/repos/ethereumclassic/ECIPs/issues/comments/674768419/reactions",
      "total_count": 0,
      "+1": 0,
      "-1": 0,
      "laugh": 0,
      "hooray": 0,
      "confused": 0,
      "heart": 0,
      "rocket": 0,
      "eyes": 0
    },
    "performed_via_github_app": null
  }