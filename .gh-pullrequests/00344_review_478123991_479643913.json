{
    "id": 479643913,
    "node_id": "MDI0OlB1bGxSZXF1ZXN0UmV2aWV3Q29tbWVudDQ3OTY0MzkxMw==",
    "url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/comments/479643913",
    "pull_request_review_id": 478123991,
    "diff_hunk": "@@ -0,0 +1,168 @@\n+---\n+lang: en\n+ecip: ECIP-10XX\n+title: 51% Attack protection system based on Bitcoin Merged Mining\n+status: Draft\n+type: Standards Track\n+category: Core\n+discussions-to: https://github.com/ethereumclassic/ECIPs/issues/343\n+author: Sergio Lerner (@SergioDemianLerner) and Martin Medina (@martinmedina) \n+created: 2020-08-22\n+---\n+\n+## Abstract\n+\n+We present a proposal for ETC to use blocks mined with SHA-256 in Bitcoin to detect blockchain branches that have been mined in private and rise alarms that can prevent double-spend attacks. The proposal enables full nodes to take local decision to prevent certain attacks, but also the existence of a public view of the different competing ETC branches enables the use a Fork Monitoring System that can provide more detailed alerts to full nodes and to the community.  \n+\n+## Motivation\n+\n+During August 2020, Ethereum Classic was the target of two successful 51% attacks. The events have shown that the current levels of security provided by the Ethash miners are not enough.\n+\n+To make ETC more secure, this proposal presents an enhancement that allows full nodes to know if the best chain they are choosen was publicly available at the time of creation or it was hidden to the network. Two measures are computed by the node: the cumulative visibility score and the average visibility score over a period of 1000 blocks. The higher the cumulative score, the highest the amount of information that was timely made public about this blockchain. Alarms can be established when the average visibility score drops below a certain threshold, such as 70%. \n+ETC users can buy visibility proofs using a trustless contract running on the RSK blockchain.  A Visibility proof contains a checkpoint in the ETC blockchain that the user wants to be visible. The contract is queried by Bitcoin miners, which take the checkpointed block and publishes it in the coinbase of blocks. \n+\n+\n+By leveraging RSK networkâ€™s existing merged mining capabilities with Bitcoin, RSK can forward the ETC checkpoint information to Bitcoin miners in order to link it to a Bitcoin block and access Bitcoin SHA-256 security levels. The process that allows this is called Universal Merged Mining (UMM) and currently provides access to 100% of the Bitcoin Network Hashrate, at a frequency of one checkpoint every 20 minutes. \n+\n+\n+## Specification\n+\n+Changes must be done in different parts of the ETC protocol. A description of changes follows: \n+\n+### VisibilityProof\n+\n+Every block can be referenced by zero, one or more than one VisibilityProof messages. A VisibilityProof message that references a block can be included in any of the following 256 blocks of the referenced block. A VisibilityProof message therefore attests that Bitcoin hashrate has confirmed the referenced block.\n+\n+VisibilityProof messages are non-interactive SHA256 proofs-of-work and they can be verified by ETC without connecting to the Bitcoin network, similar to merge-mining proofs.\n+\n+A VisibilityProof score is measured by sum of the scores of the  Bitcoin headers that reference it, either from a single VisibilityProof message or from multiple messages. The score of a Bitcoin header is the difficulty of the block, specified in the header.\n+\n+Each VisibilityProof message *m* contains *P(m)* merge-mining proofs. Each merge-mining proof contains a Bitcoin header. Each header must have a hash that matches the difficulty established by the header.\n+\n+There are two types of Bitcoin headers: a **hit** and a **hit confirmation**. A hit must have a merge-mining proof that relates the header unequivocally to an ETC block. A hit confirmation is a child of a hit or a child of another hit confirmation. Hit confirmations are proven to not reference any other ETC block. Hit confirmations are \"unclaimed\" proof-of-work that ETC claims to protect from private miners. Hit confirmations must come after hits in the VisibilityProof message. Each hit confirmation must have the prior block header as parent. For example, the following is a valid VisibilityProof message (in brackets we show 16-byte truncated block hashes, merge-mining proofs are omitted):\n+\n+```\n+1. **hit**:  hash=0000000000000000000017b25971a701, blockHeight=644735, parent =0000000000000000000d9e9adbe0d01\n+2. **conf**: hash=0000000000000000000a34ee53a217b6, blockHeight=644736,  Parent=0000000000000000000017b25971a701\n+3. **conf**: hash=0000000000000000000db9f0fb12c4e9, blockHeight=644737, Parent=0000000000000000000a34ee53a217b6\n+4. **hit**:  hash=0000000000000000000a7470181b940a2, blockHeight=644740, Parent=0000000000000000000a34ee53a217b6\n+5. **conf**: hash=000000000000000000025fdd6edcee338, blockHeight=644741, Parent=0000000000000000000a7470181b940a",
    "path": "_specs/ecip-51-attack-protection-system.md",
    "position": null,
    "original_position": 49,
    "commit_id": "4decf88a721945c54bd38d83b001a7c354f6410a",
    "user": {
      "login": "gtklocker",
      "id": 732062,
      "node_id": "MDQ6VXNlcjczMjA2Mg==",
      "avatar_url": "https://avatars3.githubusercontent.com/u/732062?v=4",
      "gravatar_id": "",
      "url": "https://api.github.com/users/gtklocker",
      "html_url": "https://github.com/gtklocker",
      "followers_url": "https://api.github.com/users/gtklocker/followers",
      "following_url": "https://api.github.com/users/gtklocker/following{/other_user}",
      "gists_url": "https://api.github.com/users/gtklocker/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/gtklocker/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/gtklocker/subscriptions",
      "organizations_url": "https://api.github.com/users/gtklocker/orgs",
      "repos_url": "https://api.github.com/users/gtklocker/repos",
      "events_url": "https://api.github.com/users/gtklocker/events{/privacy}",
      "received_events_url": "https://api.github.com/users/gtklocker/received_events",
      "type": "User",
      "site_admin": false
    },
    "body": "```suggestion\r\n5. **conf**: hash=000000000000000000025fdd6edcee338, blockHeight=644741, Parent=0000000000000000000a7470181b940a2\r\n```",
    "created_at": "2020-08-29T12:18:00Z",
    "updated_at": "2020-08-31T14:56:27Z",
    "html_url": "https://github.com/ethereumclassic/ECIPs/pull/344#discussion_r479643913",
    "pull_request_url": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/344",
    "author_association": "NONE",
    "_links": {
      "self": {
        "href": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/comments/479643913"
      },
      "html": {
        "href": "https://github.com/ethereumclassic/ECIPs/pull/344#discussion_r479643913"
      },
      "pull_request": {
        "href": "https://api.github.com/repos/ethereumclassic/ECIPs/pulls/344"
      }
    },
    "original_commit_id": "b254e02e4654758d68647da07b75555d25054e1c"
  }