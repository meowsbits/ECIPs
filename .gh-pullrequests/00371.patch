From 55eca38889c08fa2aebdcf673c2e8922ba226716 Mon Sep 17 00:00:00 2001
From: Raw Pong Ghmoa <58883403+q9f@users.noreply.github.com>
Date: Fri, 11 Sep 2020 19:51:48 +0200
Subject: [PATCH 1/3] ECIP 1099: Add block numbers and move to Last Call

---
 _specs/ecip-1099.md | 19 +++++++++++++++----
 1 file changed, 15 insertions(+), 4 deletions(-)

diff --git a/_specs/ecip-1099.md b/_specs/ecip-1099.md
index aa60c03a7..60bedc272 100644
--- a/_specs/ecip-1099.md
+++ b/_specs/ecip-1099.md
@@ -2,7 +2,8 @@
 lang: en
 ecip: 1099
 title: Calibrate Epoch Duration
-status: Draft
+status: Last Call
+review-period-end: 2020-10-02
 type: Standards Track
 category: Core
 discussions-to: https://github.com/ethereumclassic/ECIPs/issues/368
@@ -12,21 +13,31 @@ replaces: 1043
 license: Apache-2
 ---
 
-### Abstract
+### Abstract ###
 
 The purpose of this ECIP is to calibrate the epoch length used in DAG calculations.
 
 ### Motivation ###
+
 The original intent of the DAG was to provide ASIC resistance to the mining protocol in order to prevent centralization of mining distributions and thereby provide for an objectively fair distribution of tokens. As evident by ASICs being developed that are capable of matching current GPU miners while being more energy efficient, the DAG has succeeded in leveling the playing field between GPU incumbents and ASIC challengers, avoiding ASIC takeover and domination, and leading to a competitive and large mining ecosystem. However the original parameters are proving too aggressive, resulting in obsoleting support for GPUs still in wide use today by miners.
 
 Calibrating these parameters to better reflect todays hardware markets and mining ecosystem will bring the DAG growth back in sync with commonly used GPUs. Allowing the DAG system to continue to serve it's purpose far into the future.
 
+### Parameters ###
+
+Ethash transitions to a modified Dagger Hashimoto algorithm, referred to hereby as _Etchash_, on block `ETCHASH_FORK_BLOCK`:
+
+* For the Ethereum Classic main network: `ETCHASH_FORK_BLOCK := 11_460_000` (Epoch 382)
+* For the Mordor Classic test network: `ETCHASH_FORK_BLOCK := 2_340_000` (Epoch 78)
+
 ### Specification ###
 
+On `ETCHASH_FORK_BLOCK`, activate the following Etchash logic:
+
 ```
 const oldEpochLength = 30000
 const newEpochLength = 60000
-const activationBlock = n
+const activationBlock = ETCHASH_FORK_BLOCK
 
 // calcEpochLength returns the epoch length for a given block number.
 func calcEpochLength(blockNum uint64) uint64 {
@@ -58,7 +69,7 @@ func seedHash(block uint64) []byte {
   return seed
 }
 ```
-The oldEpochLength (30000) changes to newEpochLength (60000) at a given activationBlock (hardfork required).
+The oldEpochLength (30000) changes to newEpochLength (60000) at a given `ETCHASH_FORK_BLOCK` (hardfork required).
 
 This will result in the epoch (blockNumber/[old/new]EpochLength) halving upon activation. As the DAG cache and dataset sizes are calculated from epoch, the growth in which they have experienced too will half upon activation. DAG caches and dataset will then continue to grow as intended, however at half of the pre-activation rate. To avoid re-use of seeds oldEpochLength will continue to be used within the seedHash function.
 

From 37ae2697412e1f721b6493e85828294765ee62d4 Mon Sep 17 00:00:00 2001
From: Raw Pong Ghmoa <58883403+q9f@users.noreply.github.com>
Date: Thu, 24 Sep 2020 12:15:57 +0200
Subject: [PATCH 2/3] 1099: update block numbers

---
 _specs/ecip-1099.md | 10 +++++-----
 1 file changed, 5 insertions(+), 5 deletions(-)

diff --git a/_specs/ecip-1099.md b/_specs/ecip-1099.md
index 60bedc272..93e027df8 100644
--- a/_specs/ecip-1099.md
+++ b/_specs/ecip-1099.md
@@ -27,8 +27,8 @@ Calibrating these parameters to better reflect todays hardware markets and minin
 
 Ethash transitions to a modified Dagger Hashimoto algorithm, referred to hereby as _Etchash_, on block `ETCHASH_FORK_BLOCK`:
 
-* For the Ethereum Classic main network: `ETCHASH_FORK_BLOCK := 11_460_000` (Epoch 382)
-* For the Mordor Classic test network: `ETCHASH_FORK_BLOCK := 2_340_000` (Epoch 78)
+* For the Ethereum Classic main network: `ETCHASH_FORK_BLOCK := 11_700_000` (Epoch 390)
+* For the Mordor Classic test network: `ETCHASH_FORK_BLOCK := 2_520_000` (Epoch 82)
 
 ### Specification ###
 
@@ -82,9 +82,9 @@ Mining software and pool implementations required.
 
 For the smoothest possible transition activation should occur on a block in which an epoch transition to an even epoch number is occurring.  
 
-* Epoch 374/2 = 187   (good) = block 11220000
-* Epoch 375/2 = 187.5 (bad)  -
-* Epoch 376/2 = 188   (good) = block 11280000
+* Epoch 388/2 = 194   (good) = block 11_640_000
+* Epoch 389/2 = 194.5 (bad)  -
+* Epoch 390/2 = 195   (good) = block 11_700_000
 
 #### Clients ####
 * [] core-geth

From cc0d7db9069d7bf52ca06c8e93a1ff27df5c00c8 Mon Sep 17 00:00:00 2001
From: Raw Pong Ghmoa <58883403+q9f@users.noreply.github.com>
Date: Thu, 24 Sep 2020 12:19:36 +0200
Subject: [PATCH 3/3] 1099: add implementation

---
 _specs/ecip-1099.md | 15 +++++++++------
 1 file changed, 9 insertions(+), 6 deletions(-)

diff --git a/_specs/ecip-1099.md b/_specs/ecip-1099.md
index 93e027df8..72f667bc1 100644
--- a/_specs/ecip-1099.md
+++ b/_specs/ecip-1099.md
@@ -29,6 +29,7 @@ Ethash transitions to a modified Dagger Hashimoto algorithm, referred to hereby
 
 * For the Ethereum Classic main network: `ETCHASH_FORK_BLOCK := 11_700_000` (Epoch 390)
 * For the Mordor Classic test network: `ETCHASH_FORK_BLOCK := 2_520_000` (Epoch 82)
+* For the Kotti Classic test network, no upgrade is required.
 
 ### Specification ###
 
@@ -87,20 +88,22 @@ For the smoothest possible transition activation should occur on a block in whic
 * Epoch 390/2 = 195   (good) = block 11_700_000
 
 #### Clients ####
-* [] core-geth
-* [] besu
+* [x] core-geth - https://github.com/etclabscore/core-geth/pull/186
+* [ ] besu
+
 #### Pools ####
-* [] open-ethereum-pool
+* [ ] open-ethereum-pool
+
 #### Mining Software ####
-* [] ethminer  
+* [ ] ethminer
 
-### References
+### References ###
 - [ECIP-1099 Research/Test data](https://github.com/iquidus/ecip-1099-data)
 - [ECIP 1043 - Fixed DAG limit restriction](https://ecips.ethereumclassic.org/ECIPs/ecip-1043)
 - [ECIP-? Limit DAG growth #6](https://github.com/ethereumproject/ECIPs/issues/6)
 - [Ethash Sources](https://github.com/ethereum/ethash)
 - [DAG Size Calculator](https://investoon.com/tools/dag_size)
 
-## Copyright
+## Copyright ##
 
 This work is licensed under [Apache License, Version 2.0](http://www.apache.org/licenses/).
